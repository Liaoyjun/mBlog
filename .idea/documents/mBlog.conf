##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#



 log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '

                      '$status $body_bytes_sent "$http_referer" '

                      '"$http_user_agent" "$http_x_forwarded_for"'

                      '$request_time';


 log_format  easy  '$remote_addr           [$time_local]        "$request"        '

                      '$status        $request_time    ';





#access_log /var/log/nginx/access.log;
#error_log /var/log/nginx/error.log;

access_log /var/www/mBlog/log/access.log main;
access_log /var/www/mBlog/log/access_easy.log easy;

# error_log /var/www/mBlog/log/error_easy.log debug;
error_log /var/www/mBlog/log/error_debug_easy.log warn;




#upstream django {
    # server unix:///path/to/your/mysite/mysite.sock; # for a file socket
#    server 127.0.0.1:3032; # for a web port socket (we'll use this first)
#}


server {
	listen 82 default_server;
	listen [::]:82 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/mBlog/mBlog;


	# Add index.php to the list if you are using PHP
	index index.html index.php index.htm index.nginx-debian.html;

	server_name _;


        location /static {
        alias /var/www/mBlog/mBlog/static; 
        }


        #location /admin {
        #alias /var/www/mBlog/mBlog/static/admin;
        #}


	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;

                include uwsgi_params;
                #uwsgi_pass django;
                uwsgi_pass 127.0.0.1:3032;
                #uwsgi_pass unix:/var/www/mBlog/mBlog/mBlog.sock;
	}



        error_page  404 403  /404; 

        location  /404 {
            alias /var/www/mBlog/mBlog/static/404;
            index 404.html;
        }     
 

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}



        location ~ \.php$ {

                include snippets/fastcgi-php.conf;
                # With php5-cgi alone:
                #fastcgi_pass 127.0.0.1:9000;
                # With php5-fpm:
                fastcgi_pass unix:/var/run/php5-fpm.sock;
                #include fastcgi_params;
        }



	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
